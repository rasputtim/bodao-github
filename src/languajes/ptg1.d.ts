declare const ptg: {
    pong: () => string;
    wait: () => string;
    time: {
        titleTime: string;
        actual: string;
    };
    Greetings: string[];
    PanelSubMenu: (tag: any, prefix: any, pushname: any, actividad: any, role: any, monospace: any, nwn: any) => string;
    PanelMenu: (prefix: any, pushname: any, actividad: any, role: any, monospace: any, nwn: any) => string;
    FooterPM: (CovidApi: any) => string;
    PanelMenu2: (prefix: any, monospace: any) => string;
    MenuArte: (prefix: any, monospace: any) => string;
    AniMenu: (prefix: any, monospace: any) => string;
    MenuH: (prefix: any, monospace: any) => string;
    BanCall: (helpcall: any) => string;
    AutoSaludo: () => string;
    Wlc1: () => string;
    Wlc2: () => string;
    Wlc3: (num: any, metadata: any, dateComplete: any, gpdesc: any) => string;
    Wlc4: () => string;
    Wlc5: (num: any) => string;
    NoSpam1: () => string;
    NoSpam2: (pushname: any) => string;
    NoReg: (pushname: any) => string;
    PreFijo: () => string;
    Erreply: () => string;
    SinLimite: (pushname: any) => string;
    SinLimite2: (pushname: any) => string;
    Limite: (pushname: any) => string;
    NivelUp: (dateComplete: any, senderNumber: any, getLevel: any, LevelingLevel: any, sender: any, per: any, LevelingXp: any, role: any, role2: any) => string;
    MinGp1: () => string;
    MinGp2: () => string;
    NoTraba1: () => string;
    NoTraba2: (saltos: any, eliminar: any, pushname: any) => string;
    NoPriv: (privcre: any) => string;
    NoLinks1: () => string;
    NoLinks2: () => string;
    NoLinks3: () => string;
    Pong: (conexiont: any) => string;
    NoReg2: (prefix: any) => string;
    SoloGp: () => string;
    SoloAdm: () => string;
    YaActivo: (command: any) => string;
    YaActivoSi: (command: any, groupName: any) => string;
    YaActivoNo: (command: any, groupName: any) => string;
    ActiVar: () => string;
    DesActiVar: () => string;
    AdminBot: () => string;
    SoloCreador: () => string;
    Modo0: () => string;
    Modo1: () => string;
    Modo2: () => string;
    Modo3: () => string;
    Modo4: () => string;
    ModNet0: () => string;
    ModNet1: () => string;
    ModNet2: () => string;
    ModNet3: () => string;
    ModNet4: () => string;
    NoPriv0: () => string;
    NoPriv1: () => string;
    NoPriv2: () => string;
    NoPriv3: () => string;
    NoPriv4: () => string;
    PreDit0: () => string;
    PreDit1: () => string;
    PreDit2: () => string;
    NomBot0: () => string;
    NomBot1: () => string;
    NomBot2: () => string;
    PrinCre0: () => string;
    PrinCre1: () => string;
    PrinCre2: () => string;
    MyRed0: () => string;
    MyRed1: () => string;
    MyRed2: () => string;
    UsLimit0: () => string;
    UsLimit1: () => string;
    UsLimit2: () => string;
    UsLimit3: () => string;
    UsLimit4: () => string;
    PfBot0: () => string;
    PfBot1: () => string;
    ProCes: (pushname: any) => string;
    QuImage: (prefix: any, command: any) => string;
    SuPrim: () => string;
    NoTexto: () => string;
    BcGrupos0: (gmap: any) => string;
    BcGrupos1: (gmap: any) => string;
    BcTodos0: (tmap: any) => string;
    BcTodos1: () => string;
    BanUser0: () => string;
    BanUser1: () => string;
    CerrarGp0: (pushname: any, prefix: any, command: any) => string;
    CerrarGp1: (UwU: any, pushname: any) => string;
    CerrarGp2: () => string;
    AbrirGp: () => string;
    NomGp0: () => string;
    NomGp1: (groupName: any) => string;
    DesGp0: () => string;
    DesGp1: (nwn: any, groupDesc: any) => string;
    PfGp0: () => string;
    PfGp1: () => string;
    ToDos: (groupName: any, pushname: any, texto: any) => string;
    DarP: (usuariop: any, pushname: any) => string;
    QuitP: (usuarioq: any, pushname: any) => string;
    BanSer: (adiuser: any, pushname: any) => string;
    UsEnLinea: () => string;
    Baneao: (senderNumber: any) => string;
    BotInfo: () => string;
    GraciAs: () => string;
    MasCmds: () => string;
    VerCmds: () => string;
    YaReg: () => string;
    MyReg0: () => string;
    MyReg1: () => string;
    MyReg2: () => string;
    MyReg3: () => string;
    MyReg4: () => string;
    MyReg5: (nwn: any, time: any, nomreg: any, pushname: any, edreg: any, sender: any, codereg: any) => string;
    MyReg6: () => string;
    CmdsR0: () => string;
    CmdsR1: () => string;
    CmdsA0: () => string;
    CmdsA1: () => string;
    CmdsO0: () => string;
    CmdsO1: () => string;
    CmdsH0: () => string;
    CmdsH1: () => string;
    MCmds0: () => string;
    MCmds1: () => string;
    AntLinkInfo: () => string;
    AntiFakeInfo: () => string;
    FunModeInfo: () => string;
    BanModeInfo: () => string;
    EnableInfo: () => string;
    AntiForeignInfo: () => string;
    AntiFakes2Info: () => string;
    AntiLinkInfo: () => string;
    AntiVirtexInfo: () => string;
    AntiPrivateInfo: () => string;
    AutoWelcomeInfo: () => string;
    LevelingInfo: () => string;
    HentaiInfo: () => string;
    AnimeInfo: () => string;
    OffLineInfo: () => string;
    BotIdiomChanged: (lang: any) => void;
    PromoteAdmin: string;
    Promote: string;
    DemoteAdmin: string;
    Demote: string;
    Remove: string;
    UserKick: string;
    ProfileMemory: string;
    ProfileArch: string;
    ProfileSpeed: string;
    ProfileConnection: string;
    ProfilePlataform: string;
    Library: string;
    ProfileExecTime: string;
    ProfileVersion: string;
};
export default ptg;
//# sourceMappingURL=ptg1.d.ts.map